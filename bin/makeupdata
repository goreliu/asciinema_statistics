#!/bin/zsh

cd ${0:h}/..

prun() {
    (($+max_process)) || typeset -gi max_process=10
    (($+running_process)) || typeset -gA running_process=()

    while {getopts j:h arg} {
        case $arg {
            (j)
            ((OPTARG > 0)) && max_process=$OPTARG
            ;;

            (h)
            echo "Usage: $0 [-j max_process] [cmd] [args]"
            return
            ;;
        }
    }

    shift $((OPTIND - 1))

    (($# == 0)) && {
        for i (${(k)running_process}) {
            [[ -e $i ]] || unset "running_process[$i]"
        }

        echo "running/max: $#running_process/$max_process"
        (($#running_process > 0)) && echo "pids:" ${${(k)running_process/\/proc\/}/\/exe}
        return 0
    }

    while ((1)) {
        local running_process_num=$#running_process

        if (($running_process_num < max_process)) {
            $* &
            running_process[/proc/$!/exe]=1
            return
        }

        for i (${(k)running_process}) {
            [[ -e $i ]] || unset "running_process[$i]"
        }

        (($#running_process == $running_process_num)) && {
            echo "waiting $running_process_num pids:" ${${(k)running_process/\/proc\/}/\/exe}
            inotifywait -qq ${(k)running_process} 2>/dev/null
        }
    }
}

[[ -d casts && -d pages ]] || {
    mkdir -p casts pages
}

if [[ $1 == -c ]] {
    # check

    echo diff casts pages:
    diff <(ls casts | sed 's/.cast.gz//g' | sort -n) <(ls pages | sort -n)

    echo diff pages list:
    diff <(ls pages | sort -n) data/list.txt

    echo diff list os shell term user:
    diff data/list.txt <(cut -f1 -d@ data/os.txt)
    diff data/list.txt <(cut -f1 -d@ data/shell.txt)
    diff data/list.txt <(cut -f1 -d@ data/term.txt)
    diff data/list.txt <(cut -f1 -d@ data/user.txt)

    return 0
}

for i ($(comm -23 <(sort data/list.txt) <(ls casts | sed 's/.cast.gz//g' | sort))) {
    echo downloading $i.cast.gz ...
    prun curl -L "https://asciinema.org/a/$i.cast?dl=1" -o casts/$i.cast.gz 2> /dev/null
}

for i ($(comm -23 <(sort data/list.txt) <(ls pages | sort))) {
    echo downloading $i ...
    prun curl -L "https://asciinema.org/a/$i" -o pages/$i 2> /dev/null
}

wait
